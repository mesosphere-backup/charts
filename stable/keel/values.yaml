# Default values for keel.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: keelhq/keel
  tag: 0.8.5
  pullPolicy: IfNotPresent

# Enable insecure registries
insecure_registry: false

# Polling is enabled by default,
# you can disable it setting value below to false
polling:
  enabled: true

# Helm provider support
helmProvider:
  enabled: true

# Google Container Registry
# GCP Project ID
gcr:
  enabled: false
  projectId:  ""
  pubSub:
    enabled: false

# Webhook Notification
# Remote webhook endpoint for notification delivery
webhook:
  enabled: false
  endpoint: ""

# Slack Notification
# bot name (default keel) must exist!
slack:
  enabled: false
  bot_name: ""
  token: ""
  channel: ""
  approvals_channel: ""

# Hipchat notification and approvals
hipchat:
  enabled: false
  token: ""
  channel: ""
  approvals_channel: ""
  bot_name: ""
  user_name: ""
  password: ""

mattermost:
  enabled: false
  endpoint: ""

# Keel service
# Enable to receive webhooks from Docker registries
service:
  enabled: false
  type: LoadBalancer
  externalPort: 9300
  clusterIP: ""

# Webhook Relay service
# If you donâ€™t want to expose your Keel service, you can use https://webhookrelay.com/
# which can deliver webhooks to your internal Keel service through Keel sidecar container.
webhookRelay:
  enabled: false
  # webhookrelay.com credentials
  key: ""
  secret: ""
  bucket: ""
  # webhookrelay docker image
  image:
    repository: webhookrelay/webhookrelayd
    tag: 0.6.0
    pullPolicy: IfNotPresent

# Keel self-update
# uncomment lines below if you want Keel to automaticly
# self-update to the latest release version
keel:
  # keel policy (all/major/minor/patch/force)
  policy: all
  # trigger type, defaults to events such as pubsub, webhooks
  trigger: poll
  # polling schedule
  pollSchedule: "@every 3m"
  # images to track and update
  images:
   - repository: image.repository
     tag: image.tag

# RBAC manifests management
rbac:
  enabled: false

# Resources
resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 50m
    memory: 64Mi

# NodeSelector
nodeSelector: {}

# base64 encoded json of GCP service account
# more info available here: https://cloud.google.com/kubernetes-engine/docs/tutorials/authenticating-to-cloud-platform
# e.g. --set googleApplicationCredentials=$(cat <JSON_KEY_FIEL> | base64)
# googleApplicationCredentials: ""

# Enable DEBUG logging
debug: false
