---
kind: ConfigMap
apiVersion: v1
metadata:
  labels:
    app: {{ template "openfaas.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: prometheus-config
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  name: prometheus-config
  namespace: {{ .Release.Namespace | quote }}
data:
  prometheus.yml: |
    global:
      scrape_interval:     15s
      evaluation_interval: 15s
      external_labels:
          monitor: 'faas-monitor'

    rule_files:
        - 'alert.rules.yml'

    scrape_configs:
      - job_name: 'prometheus'
        scrape_interval: 5s
        static_configs:
          - targets: ['localhost:9090']

      - job_name: "gateway"
        scrape_interval: 5s
        dns_sd_configs:
          - names: ['gateway.{{ .Release.Namespace }}']
            port: 8080
            type: A
            refresh_interval: 5s

    alerting:
      alertmanagers:
      - static_configs:
        - targets:
          - alertmanager:9093

  alert.rules.yml: |
    groups:
      - name: openfaas
        rules:
        - alert: service_down
          expr: up == 0
        - alert: APIHighInvocationRate
          expr: sum(rate(gateway_function_invocation_total{code="200"}[10s])) BY (function_name) > 5
          for: 5s
          labels:
            service: gateway
            severity: major
            value: '{{ "{{" }}$value{{ "}}" }}'
          annotations:
            description: High invocation total on "{{ "{{" }}$labels.instance{{ "}}" }}"
            summary: High invocation total on "{{ "{{" }}$labels.instance{{ "}}" }}"
---
kind: ConfigMap
apiVersion: v1
metadata:
  labels:
    app: {{ template "openfaas.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: alertmanager-config
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  name: alertmanager-config
  namespace: {{ .Release.Namespace | quote }}
data:
  alertmanager.yml: |
    route:
      group_by: ['alertname', 'cluster', 'service']
      group_wait: 5s
      group_interval: 10s
      repeat_interval: 30s
      receiver: scale-up
      routes:
      - match:
          service: gateway
          receiver: scale-up
          severity: major

    inhibit_rules:
    - source_match:
        severity: 'critical'
      target_match:
        severity: 'warning'
      equal: ['alertname', 'cluster', 'service']

    receivers:
    - name: 'scale-up'
      webhook_configs:
        - url: http://gateway.{{ .Release.Namespace }}:8080/system/alert
          send_resolved: true
---
